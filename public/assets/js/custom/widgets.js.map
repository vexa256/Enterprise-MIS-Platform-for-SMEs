{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/widgets.js","webpack://metronic/webpack/bootstrap","webpack://metronic/webpack/startup"],"names":["KTWidgets","init","toggle","charts","element","height","labelColor","borderColor","baseColor","secondaryColor","formEl","btn","widget5","follow","document","querySelector","picker","$","start","moment","end","daterangepicker","direction","KTUtil","isRTL","startDate","endDate","opens","applyClass","cancelClass","ranges","subtract","startOf","endOf","cb","label","title","range","format","html","initDaterangepicker","addEventListener","window","location","href","this","getAttribute","querySelectorAll","slice","call","map","parseInt","css","color","getCssVariableValue","lightColor","ApexCharts","series","name","data","chart","fontFamily","type","toolbar","show","zoom","enabled","sparkline","plotOptions","legend","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","labels","style","fontSize","crosshairs","position","dashArray","tooltip","formatter","undefined","offsetY","yaxis","min","max","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","markers","strokeColor","strokeWidth","render","initStatisticsWidget4","getElementById","bar","horizontal","columnWidth","endingShape","grid","strokeDashArray","lines","initChartsWidget2","initChartsWidget3","baseLightColor","secondaryLightColor","initChartsWidget4","stacked","initChartsWidget5","padding","top","right","bottom","left","initChartsWidget6","color1","color1Light","color2","color2Light","color3","color3Light","initChartsWidget7","x","offsetX","initChartsWidget8","colorDarken","dropShadow","enabledOnSeries","blur","marker","initMixedWidget2","initMixedWidget3","radialBar","hollow","margin","size","showOn","fontWeight","track","background","lineCap","initMixedWidget4","fill1","gradient","shadeIntensity","gradientToColors","inverseColors","opacityFrom","opacityTo","stops","colorStops","initMixedWidget5","initMixedWidget6","initMixedWidget7","borderRadius","initMixedWidget10","initMixedWidget12","Quill","modules","container","placeholder","theme","e","preventDefault","setAttribute","setTimeout","removeAttribute","classList","remove","add","scrollTo","disabled","contains","innerHTML","FullCalendar","todayDate","YM","YESTERDAY","clone","TODAY","TOMORROW","calendarEl","Calendar","headerToolbar","center","contentHeight","aspectRatio","nowIndicator","now","views","dayGridMonth","buttonText","timeGridWeek","timeGridDay","initialView","initialDate","editable","dayMaxEvents","navLinks","events","description","className","id","url","initCalendarWidget1","module","exports","onDOMContentLoaded","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"mappings":"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","file":"js/custom/widgets.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTWidgets = function () {\r\n    // Statistics widgets\r\n    var initStatisticsWidget3 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-3-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0.3\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initStatisticsWidget4 = function() {\r\n        var charts = document.querySelectorAll('.statistics-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [40, 40, 30, 30, 35, 35, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0.3\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: '#E4E6EF',\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function(val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                markers: {\r\n                    colors: [baseColor],\r\n                    strokeColor: [lightColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    // Charts widgets\r\n    var initChartsWidget1 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_1_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['30%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();      \r\n    }\r\n\r\n    var initChartsWidget2 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_2_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-warning');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [44, 55, 57, 56, 61, 58]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [76, 85, 101, 98, 87, 105]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['30%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget3 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_3_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-info');\r\n        var lightColor = KTUtil.getCssVariableValue('--bs-light-info');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 40, 40, 90, 90, 70, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [baseColor]\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: baseColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                strokeColor: baseColor,\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget4 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_4_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\r\n        var baseLightColor = KTUtil.getCssVariableValue('--bs-light-success');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-warning');\r\n        var secondaryLightColor = KTUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [60, 50, 80, 40, 100, 60]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [70, 60, 110, 40, 50, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth'\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: labelColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [baseLightColor, secondaryLightColor],\r\n                strokeColor: [baseLightColor, secondaryLightColor],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget5 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_5_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-info');\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [40, 50, 65, 70, 50, 30]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [-30, -40, -55, -60, -40, -20]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'bar',\r\n                stacked: true,\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    horizontal: false,\r\n                    columnWidth: ['12%'],\r\n                    endingShape: 'rounded'\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                min: -80,\r\n                max: 80,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget6 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_6_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n\r\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\r\n        var baseLightColor = KTUtil.getCssVariableValue('--bs-light-primary');\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-info');        \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                type: 'bar',\r\n                stacked: true,\r\n                data: [40, 50, 65, 70, 50, 30]\r\n            }, {\r\n                name: 'Revenue',\r\n                type: 'bar',\r\n                stacked: true,\r\n                data: [20, 20, 25, 30, 30, 20]\r\n            }, {\r\n                name: 'Expenses',\r\n                type: 'area',\r\n                data: [50, 80, 60, 90, 50, 70]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                stacked: true,\r\n                height: 350,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n                bar: {\r\n                    stacked: true,\r\n                    horizontal: false,\r\n                    endingShape: 'rounded',\r\n                    columnWidth: ['12%']\r\n                },\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: ['transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                max: 120,\r\n                labels: {\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            fill: {\r\n                opacity: 1\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [baseColor, secondaryColor, baseLightColor],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                },\r\n                padding: {\r\n                    top: 0,\r\n                    right: 0,\r\n                    bottom: 0,\r\n                    left: 0\r\n                }\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget7 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_7_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        var color1 = KTUtil.getCssVariableValue('--bs-warning');\r\n        var color1Light = KTUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        var color2 = KTUtil.getCssVariableValue('--bs-success');\r\n        var color2Light = KTUtil.getCssVariableValue('--bs-light-success');\r\n\r\n        var color3 = KTUtil.getCssVariableValue('--bs-primary');  \r\n        var color3Light = KTUtil.getCssVariableValue('--bs-light-primary');  \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 30, 50, 50, 35, 35]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [55, 20, 20, 20, 70, 70]\r\n            }, {\r\n                name: 'Expenses',\r\n                data: [60, 60, 40, 40, 30, 30]\r\n            }],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [color1, 'transparent', 'transparent']\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false,\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: strokeColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [color1, color2, color3],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [color1Light, color2Light, color3Light],\r\n                strokeColor: [color1, color2, color3],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    var initChartsWidget8 = function() {\r\n        var element = document.getElementById(\"kt_charts_widget_8_chart\");\r\n\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n\r\n        var color1 = KTUtil.getCssVariableValue('--bs-warning');\r\n        var color1Light = KTUtil.getCssVariableValue('--bs-light-warning');\r\n\r\n        var color2 = KTUtil.getCssVariableValue('--bs-success');\r\n        var color2Light = KTUtil.getCssVariableValue('--bs-light-success');\r\n\r\n        var color3 = KTUtil.getCssVariableValue('--bs-primary');  \r\n        var color3Light = KTUtil.getCssVariableValue('--bs-light-primary');  \r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Net Profit',\r\n                data: [30, 30, 50, 50, 35, 35]\r\n            }, {\r\n                name: 'Revenue',\r\n                data: [55, 20, 20, 20, 70, 70]\r\n            }, {\r\n                name: 'Expenses',\r\n                data: [60, 60, 40, 40, 30, 30]\r\n            },],\r\n            chart: {\r\n                fontFamily: 'inherit',\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                },\r\n                zoom: {\r\n                    enabled: false\r\n                },\r\n                sparkline: {\r\n                    enabled: true\r\n                }\r\n            },\r\n            plotOptions: {},\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 2,\r\n                colors: [color1, color2, color3]\r\n            },\r\n            xaxis: {\r\n                x: 0,\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                padding: {\r\n                    left: 0,\r\n                    right: 0,\r\n                    top: 0,\r\n                },\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    show: false,\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: strokeColor,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                y: 0,\r\n                offsetX: 0,\r\n                offsetY: 0,\r\n                padding: {\r\n                    left: 0,\r\n                    right: 0\r\n                },\r\n                labels: {\r\n                    show: false,\r\n                    style: {\r\n                        colors: labelColor,\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px'\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return \"$\" + val + \" thousands\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [color1Light, color2Light, color3Light],\r\n            grid: {\r\n                borderColor: borderColor,\r\n                strokeDashArray: 4,\r\n                padding: {\r\n                    top: 0,\r\n                    bottom: 0,\r\n                    left: 0,\r\n                    right: 0\r\n                }\r\n            },\r\n            markers: {\r\n                colors: [color1, color2, color3],\r\n                strokeColor: [color1, color2, color3],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();   \r\n    }\r\n\r\n    // Mixed widgets\r\n    var initMixedWidget2 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-2-chart');\r\n\r\n        var color;\r\n        var strokeColor;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n            color = KTUtil.getCssVariableValue('--bs-' + element.getAttribute(\"data-kt-color\"));\r\n            strokeColor = KTUtil.colorDarken(color, 15);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 45, 32, 70, 40, 40, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    },\r\n                    dropShadow: {\r\n                        enabled: true,\r\n                        enabledOnSeries: undefined,\r\n                        top: 5,\r\n                        left: 0,\r\n                        blur: 3,\r\n                        color: strokeColor,\r\n                        opacity: 0.5\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 0\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [strokeColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: borderColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 80,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px',\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    },\r\n                    marker: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: ['transparent'],\r\n                markers: {\r\n                    colors: [color],\r\n                    strokeColor: [strokeColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();  \r\n        });        \r\n    }\r\n\r\n    var initMixedWidget12 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-12-chart');\r\n\r\n        var color;\r\n        var strokeColor;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {            \r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [35, 65, 75, 55, 45, 60, 55]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [40, 70, 80, 60, 50, 65, 60]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    },\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['30%'],\r\n                        endingShape: 'rounded'\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 1,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 100,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: ['solid', 'solid'],\r\n                    opacity: [0.25, 1]\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    },\r\n                    marker: {\r\n                        show: false\r\n                    }\r\n                },\r\n                colors: ['#ffffff', '#ffffff'],\r\n                grid: {\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    },\r\n                    padding: {\r\n                        left: 20,\r\n                        right: 20\r\n                    }\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render()\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget3 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-3-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget4 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-4-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-700');\r\n\r\n            var options = {\r\n                series: [74],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    height: height,\r\n                    type: 'radialBar',\r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        hollow: {\r\n                            margin: 0,\r\n                            size: \"65%\"\r\n                        },\r\n                        dataLabels: {\r\n                            showOn: \"always\",\r\n                            name: {\r\n                                show: false,\r\n                                fontWeight: '700'\r\n                            },\r\n                            value: {\r\n                                color: labelColor,\r\n                                fontSize: \"30px\",\r\n                                fontWeight: '700',\r\n                                offsetY: 12,\r\n                                show: true,\r\n                                formatter: function (val) {\r\n                                    return val + '%';\r\n                                }\r\n                            }\r\n                        },\r\n                        track: {\r\n                            background: lightColor,\r\n                            strokeWidth: '100%'\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor],\r\n                stroke: {\r\n                    lineCap: \"round\",\r\n                },\r\n                labels: [\"Progress\"]\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget5 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-5-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 30, 60, 25, 25, 40]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                fill1: {\r\n                    type: 'gradient',\r\n                    opacity: 1,\r\n                    gradient: {\r\n                        type: \"vertical\",\r\n                        shadeIntensity: 0.5,\r\n                        gradientToColors: undefined,\r\n                        inverseColors: true,\r\n                        opacityFrom: 1,\r\n                        opacityTo: 0.375,\r\n                        stops: [25, 50, 100],\r\n                        colorStops: []\r\n                    }\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 65,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget6 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-6-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [30, 25, 45, 30, 55, 55]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget7 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-7-chart');\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n            if ( !element ) {\r\n                return;\r\n            }\r\n\r\n            var color = element.getAttribute('data-kt-chart-color');\r\n\r\n            var labelColor = KTUtil.getCssVariableValue('--bs-' + 'gray-800');\r\n            var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\r\n            var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n            var lightColor = KTUtil.getCssVariableValue('--bs-light-' + color );\r\n\r\n            var options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [15, 25, 15, 40, 20, 50]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'area',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    },\r\n                    zoom: {\r\n                        enabled: false\r\n                    },\r\n                    sparkline: {\r\n                        enabled: true\r\n                    }\r\n                },\r\n                plotOptions: {},\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                fill: {\r\n                    type: 'solid',\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    curve: 'smooth',\r\n                    show: true,\r\n                    width: 3,\r\n                    colors: [baseColor]\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    },\r\n                    crosshairs: {\r\n                        show: false,\r\n                        position: 'front',\r\n                        stroke: {\r\n                            color: strokeColor,\r\n                            width: 1,\r\n                            dashArray: 3\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: true,\r\n                        formatter: undefined,\r\n                        offsetY: 0,\r\n                        style: {\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    min: 0,\r\n                    max: 60,\r\n                    labels: {\r\n                        show: false,\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" thousands\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [lightColor],\r\n                markers: {\r\n                    colors: [lightColor],\r\n                    strokeColor: [baseColor],\r\n                    strokeWidth: 3\r\n                }\r\n            };\r\n\r\n            var chart = new ApexCharts(element, options);\r\n            chart.render();\r\n        });        \r\n    }\r\n\r\n    var initMixedWidget10 = function() {\r\n        var charts = document.querySelectorAll('.mixed-widget-10-chart');\r\n\r\n        var color;\r\n        var height;\r\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\r\n        var borderColor = KTUtil.getCssVariableValue('--bs-gray-200');\r\n        var baseLightColor;\r\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\r\n        var baseColor;\r\n        var options;\r\n        var chart;\r\n\r\n        [].slice.call(charts).map(function(element) {\r\n            color = element.getAttribute(\"data-kt-color\");\r\n            height = parseInt(KTUtil.css(element, 'height'));\r\n            baseColor = KTUtil.getCssVariableValue('--bs-' + color);\r\n\r\n            options = {\r\n                series: [{\r\n                    name: 'Net Profit',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }, {\r\n                    name: 'Revenue',\r\n                    data: [50, 60, 70, 80, 60, 50, 70, 60]\r\n                }],\r\n                chart: {\r\n                    fontFamily: 'inherit',\r\n                    type: 'bar',\r\n                    height: height,\r\n                    toolbar: {\r\n                        show: false\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    bar: {\r\n                        horizontal: false,\r\n                        columnWidth: ['50%'],\r\n                        endingShape: 'rounded',\r\n                        borderRadius: 4\r\n                    },\r\n                },\r\n                legend: {\r\n                    show: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    show: true,\r\n                    width: 2,\r\n                    colors: ['transparent']\r\n                },\r\n                xaxis: {\r\n                    categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep'],\r\n                    axisBorder: {\r\n                        show: false,\r\n                    },\r\n                    axisTicks: {\r\n                        show: false\r\n                    },\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                yaxis: {\r\n                    y: 0,\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                    labels: {\r\n                        style: {\r\n                            colors: labelColor,\r\n                            fontSize: '12px'\r\n                        }\r\n                    }\r\n                },\r\n                fill: {\r\n                    type: 'solid'\r\n                },\r\n                states: {\r\n                    normal: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    hover: {\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    },\r\n                    active: {\r\n                        allowMultipleDataPointsSelection: false,\r\n                        filter: {\r\n                            type: 'none',\r\n                            value: 0\r\n                        }\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    },\r\n                    y: {\r\n                        formatter: function (val) {\r\n                            return \"$\" + val + \" revenue\"\r\n                        }\r\n                    }\r\n                },\r\n                colors: [baseColor, secondaryColor],\r\n                grid: {\r\n                    padding: {\r\n                        top: 10\r\n                    },\r\n                    borderColor: borderColor,\r\n                    strokeDashArray: 4,\r\n                    yaxis: {\r\n                        lines: {\r\n                            show: true\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n\r\n            chart = new ApexCharts(element, options);\r\n            chart.render();      \r\n        });        \r\n    } \r\n\r\n    // Feeds Widgets\r\n    var initFeedWidget1 = function() {\r\n        var formEl = document.querySelector(\"#kt_forms_widget_1_form\");\r\n        var editorId = 'kt_forms_widget_1_editor';\r\n\r\n        if ( !formEl ) {\r\n            return;\r\n        }\r\n\r\n        // init editor\r\n        var options = {\r\n            modules: {\r\n                toolbar: {\r\n                    container: \"#kt_forms_widget_1_editor_toolbar\"\r\n                }\r\n            },\r\n            placeholder: 'What is on your mind ?',\r\n            theme: 'snow'\r\n        };\r\n\r\n        if (!formEl) {\r\n            return;\r\n        }\r\n\r\n        // Init editor\r\n        var editorObj = new Quill('#' + editorId, options);\r\n    }\r\n\r\n    var initFeedsWidget4 = function() {\r\n        var btn = document.querySelector('#kt_widget_5_load_more_btn');\r\n        var widget5 = document.querySelector('#kt_widget_5');\r\n\r\n        if (btn) {\r\n            btn.addEventListener('click', function(e){\r\n                e.preventDefault();\r\n                btn.setAttribute('data-kt-indicator', 'on');\r\n\r\n                setTimeout(function() {\r\n                    btn.removeAttribute('data-kt-indicator');\r\n                    widget5.classList.remove('d-none');         \r\n                    btn.classList.add('d-none');         \r\n                    \r\n                    KTUtil.scrollTo(widget5, 200);\r\n                }, 2000);                \r\n            });\r\n        }                 \r\n    }  \r\n\r\n    // Follow button\r\n    var initUserFollowButton = function() {\r\n        var follow = document.querySelector('#kt_user_follow_button');\r\n\r\n        if (follow) {\r\n            follow.addEventListener('click', function(e){\r\n                // Prevent default action \r\n                e.preventDefault();\r\n                \r\n                // Show indicator\r\n                follow.setAttribute('data-kt-indicator', 'on');\r\n                \r\n                // Disable button to avoid multiple click \r\n\t\t\t\tfollow.disabled = true;\r\n\r\n                // Check button state\r\n                if (follow.classList.contains(\"btn-success\")) {\r\n                     setTimeout(function() {\r\n                        follow.removeAttribute('data-kt-indicator');\r\n                        follow.classList.remove(\"btn-success\");\r\n                        follow.classList.add(\"btn-light\");\r\n                        follow.querySelector(\".svg-icon\").classList.add(\"d-none\");\r\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Follow';\r\n\t\t\t\t        follow.disabled = false;\r\n                    }, 1500);   \r\n                } else {\r\n                     setTimeout(function() {\r\n                        follow.removeAttribute('data-kt-indicator');\r\n                        follow.classList.add(\"btn-success\");\r\n                        follow.classList.remove(\"btn-light\");\r\n                        follow.querySelector(\".svg-icon\").classList.remove(\"d-none\");\r\n                        follow.querySelector(\".indicator-label\").innerHTML = 'Following';\r\n                        follow.disabled = false;\r\n                    }, 1000);   \r\n                }        \r\n            });\r\n        }                 \r\n    }\r\n\r\n    // Calendar\r\n    var initCalendarWidget1 = function() {\r\n        if (typeof FullCalendar === 'undefined' || !document.querySelector('#kt_calendar_widget_1')) {\r\n            return;\r\n        }\r\n\r\n        var todayDate = moment().startOf('day');\r\n        var YM = todayDate.format('YYYY-MM');\r\n        var YESTERDAY = todayDate.clone().subtract(1, 'day').format('YYYY-MM-DD');\r\n        var TODAY = todayDate.format('YYYY-MM-DD');\r\n        var TOMORROW = todayDate.clone().add(1, 'day').format('YYYY-MM-DD');\r\n\r\n        var calendarEl = document.getElementById('kt_calendar_widget_1');\r\n        var calendar = new FullCalendar.Calendar(calendarEl, {\r\n            headerToolbar: {\r\n                left: 'prev,next today',\r\n                center: 'title',\r\n                right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n            },\r\n\r\n            height: 800,\r\n            contentHeight: 780,\r\n            aspectRatio: 3,  // see: https://fullcalendar.io/docs/aspectRatio\r\n\r\n            nowIndicator: true,\r\n            now: TODAY + 'T09:25:00', // just for demo\r\n\r\n            views: {\r\n                dayGridMonth: { buttonText: 'month' },\r\n                timeGridWeek: { buttonText: 'week' },\r\n                timeGridDay: { buttonText: 'day' }\r\n            },\r\n\r\n            initialView: 'dayGridMonth',\r\n            initialDate: TODAY,\r\n\r\n            editable: true,\r\n            dayMaxEvents: true, // allow \"more\" link when too many events\r\n            navLinks: true,\r\n            events: [\r\n                {\r\n                    title: 'All Day Event',\r\n                    start: YM + '-01',\r\n                    description: 'Toto lorem ipsum dolor sit incid idunt ut',\r\n                    className: \"fc-event-danger fc-event-solid-warning\"\r\n                },\r\n                {\r\n                    title: 'Reporting',\r\n                    start: YM + '-14T13:30:00',\r\n                    description: 'Lorem ipsum dolor incid idunt ut labore',\r\n                    end: YM + '-14',\r\n                    className: \"fc-event-success\"\r\n                },\r\n                {\r\n                    title: 'Company Trip',\r\n                    start: YM + '-02',\r\n                    description: 'Lorem ipsum dolor sit tempor incid',\r\n                    end: YM + '-03',\r\n                    className: \"fc-event-primary\"\r\n                },\r\n                {\r\n                    title: 'ICT Expo 2017 - Product Release',\r\n                    start: YM + '-03',\r\n                    description: 'Lorem ipsum dolor sit tempor inci',\r\n                    end: YM + '-05',\r\n                    className: \"fc-event-light fc-event-solid-primary\"\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: YM + '-12',\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur',\r\n                    end: YM + '-10'\r\n                },\r\n                {\r\n                    id: 999,\r\n                    title: 'Repeating Event',\r\n                    start: YM + '-09T16:00:00',\r\n                    description: 'Lorem ipsum dolor sit ncididunt ut labore',\r\n                    className: \"fc-event-danger\"\r\n                },\r\n                {\r\n                    id: 1000,\r\n                    title: 'Repeating Event',\r\n                    description: 'Lorem ipsum dolor sit amet, labore',\r\n                    start: YM + '-16T16:00:00'\r\n                },\r\n                {\r\n                    title: 'Conference',\r\n                    start: YESTERDAY,\r\n                    end: TOMORROW,\r\n                    description: 'Lorem ipsum dolor eius mod tempor labore',\r\n                    className: \"fc-event-primary\"\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: TODAY + 'T10:30:00',\r\n                    end: TODAY + 'T12:30:00',\r\n                    description: 'Lorem ipsum dolor eiu idunt ut labore'\r\n                },\r\n                {\r\n                    title: 'Lunch',\r\n                    start: TODAY + 'T12:00:00',\r\n                    className: \"fc-event-info\",\r\n                    description: 'Lorem ipsum dolor sit amet, ut labore'\r\n                },\r\n                {\r\n                    title: 'Meeting',\r\n                    start: TODAY + 'T14:30:00',\r\n                    className: \"fc-event-warning\",\r\n                    description: 'Lorem ipsum conse ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Happy Hour',\r\n                    start: TODAY + 'T17:30:00',\r\n                    className: \"fc-event-info\",\r\n                    description: 'Lorem ipsum dolor sit amet, conse ctetur'\r\n                },\r\n                {\r\n                    title: 'Dinner',\r\n                    start: TOMORROW + 'T05:00:00',\r\n                    className: \"fc-event-solid-danger fc-event-light\",\r\n                    description: 'Lorem ipsum dolor sit ctetur adipi scing'\r\n                },\r\n                {\r\n                    title: 'Birthday Party',\r\n                    start: TOMORROW + 'T07:00:00',\r\n                    className: \"fc-event-primary\",\r\n                    description: 'Lorem ipsum dolor sit amet, scing'\r\n                },\r\n                {\r\n                    title: 'Click for Google',\r\n                    url: 'http://google.com/',\r\n                    start: YM + '-28',\r\n                    className: \"fc-event-solid-info fc-event-light\",\r\n                    description: 'Lorem ipsum dolor sit amet, labore'\r\n                }\r\n            ]\r\n        });\r\n\r\n        calendar.render();\r\n    }\r\n\r\n    // Daterangepicker\r\n    var initDaterangepicker = function () {\r\n        if (!document.querySelector('#kt_dashboard_daterangepicker')) {\r\n            return;\r\n        }\r\n\r\n        var picker = $('#kt_dashboard_daterangepicker');\r\n        var start = moment();\r\n        var end = moment();\r\n\r\n        function cb(start, end, label) {\r\n            var title = '';\r\n            var range = '';\r\n\r\n            if ((end - start) < 100 || label == 'Today') {\r\n                title = 'Today:';\r\n                range = start.format('MMM D');\r\n            } else if (label == 'Yesterday') {\r\n                title = 'Yesterday:';\r\n                range = start.format('MMM D');\r\n            } else {\r\n                range = start.format('MMM D') + ' - ' + end.format('MMM D');\r\n            }\r\n\r\n            $('#kt_dashboard_daterangepicker_date').html(range);\r\n            $('#kt_dashboard_daterangepicker_title').html(title);\r\n        }\r\n\r\n        picker.daterangepicker({\r\n            direction: KTUtil.isRTL(),\r\n            startDate: start,\r\n            endDate: end,\r\n            opens: 'left',\r\n            applyClass: 'btn-primary',\r\n            cancelClass: 'btn-light-primary',\r\n            ranges: {\r\n                'Today': [moment(), moment()],\r\n                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\r\n                'Last 7 Days': [moment().subtract(6, 'days'), moment()],\r\n                'Last 30 Days': [moment().subtract(29, 'days'), moment()],\r\n                'This Month': [moment().startOf('month'), moment().endOf('month')],\r\n                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\r\n            }\r\n        }, cb);\r\n\r\n        cb(start, end, '');\r\n    }\r\n\r\n    var initDarkModeToggle = function() {\r\n        var toggle = document.querySelector('#kt_user_menu_dark_mode_toggle');\r\n        \r\n        if (toggle) {\r\n            toggle.addEventListener('click', function() {\r\n                window.location.href = this.getAttribute('data-kt-url');\r\n            });\r\n        }\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            // Daterangepicker\r\n            initDaterangepicker();\r\n            \r\n            // Dark Mode\r\n            initDarkModeToggle();\r\n\r\n            // Statistics widgets\r\n            initStatisticsWidget3();\r\n            initStatisticsWidget4();            \r\n\r\n            // Charts widgets\r\n            initChartsWidget1();\r\n            initChartsWidget2();\r\n            initChartsWidget3();\r\n            initChartsWidget4();\r\n            initChartsWidget5();\r\n            initChartsWidget6();\r\n            initChartsWidget7();\r\n            initChartsWidget8();\r\n\r\n            // Mixed widgets\r\n            initMixedWidget2();\r\n            initMixedWidget3();\r\n            initMixedWidget4();\r\n            initMixedWidget5();\r\n            initMixedWidget6();\r\n            initMixedWidget7();\r\n            initMixedWidget10();          \r\n            initMixedWidget12(); \r\n\r\n            // Feeds\r\n            initFeedWidget1();\r\n            initFeedsWidget4();\r\n\r\n            // Follow button\r\n            initUserFollowButton();\r\n\r\n            // Calendar\r\n            initCalendarWidget1();\r\n        }   \r\n    }\r\n}();\r\n\r\n// Webpack support\r\nif (typeof module !== 'undefined') {\r\n    module.exports = KTWidgets;\r\n}\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTWidgets.init();\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(54250);\n"],"sourceRoot":""}