{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/pages/projects/project/project.js"],"names":["primary","lightPrimary","success","lightSuccess","gray200","gray500","KTProjectOverview","KTUtil","getCssVariableValue","init","element","height","document","getElementById","ctx","getContext","Chart","type","data","datasets","backgroundColor","labels","options","chart","fontFamily","cutoutPercentage","responsive","maintainAspectRatio","cutout","title","display","animation","animateScale","animateRotate","tooltips","enabled","intersect","mode","bodySpacing","yPadding","xPadding","caretPadding","displayColors","titleFontColor","cornerRadius","footerSpacing","titleSpacing","plugins","legend","initChart","parseInt","css","ApexCharts","series","name","toolbar","show","plotOptions","dataLabels","fill","opacity","stroke","curve","width","colors","xaxis","categories","axisBorder","axisTicks","style","fontSize","crosshairs","position","color","dashArray","tooltip","formatter","undefined","offsetY","yaxis","states","normal","filter","value","hover","active","allowMultipleDataPointsSelection","y","val","grid","borderColor","strokeDashArray","lines","markers","strokeColor","strokeWidth","render","table","querySelector","querySelectorAll","forEach","row","dateRow","realDate","moment","innerHTML","format","setAttribute","datatable","$","DataTable","filterOrders","filterYear","minDate","maxDate","addEventListener","e","column","search","target","draw","startOf","endOf","subtract","add","fn","dataTable","ext","push","settings","dataIndex","min","max","date","parseFloat","isNaN","initTable","onDOMContentLoaded"],"mappings":"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","file":"js/custom/pages/projects/project/project.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTProjectOverview = function () {\r\n    // Colors\r\n    var primary = KTUtil.getCssVariableValue('--bs-primary');\r\n    var lightPrimary = KTUtil.getCssVariableValue('--bs-light-primary');\r\n    var success = KTUtil.getCssVariableValue('--bs-success');\r\n    var lightSuccess = KTUtil.getCssVariableValue('--bs-light-success');\r\n    var gray200 = KTUtil.getCssVariableValue('--bs-gray-200');\r\n    var gray500 = KTUtil.getCssVariableValue('--bs-gray-500');\r\n\r\n    // Private functions\r\n    var initChart = function () {        \r\n        // init chart\r\n        var element = document.getElementById(\"project_overview_chart\");\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var config = {\r\n            type: 'doughnut',\r\n            data: {\r\n                datasets: [{\r\n                    data: [30, 45, 25],\r\n                    backgroundColor: ['#00A3FF', '#50CD89', '#E4E6EF']\r\n                }],\r\n                labels: ['Active', 'Completed', 'Yet to start']\r\n            },\r\n            options: {\r\n                chart: {\r\n                    fontFamily: 'inherit'\r\n                },\r\n                cutoutPercentage: 75,\r\n                responsive: true,\r\n                maintainAspectRatio: false,\r\n                cutout: '75%',\r\n                title: {\r\n                    display: false\r\n                },\r\n                animation: {\r\n                    animateScale: true,\r\n                    animateRotate: true\r\n                },\r\n                tooltips: {\r\n                    enabled: true,\r\n                    intersect: false,\r\n                    mode: 'nearest',\r\n                    bodySpacing: 5,\r\n                    yPadding: 10,\r\n                    xPadding: 10,\r\n                    caretPadding: 0,\r\n                    displayColors: false,\r\n                    backgroundColor: '#20D489',\r\n                    titleFontColor: '#ffffff',\r\n                    cornerRadius: 4,\r\n                    footerSpacing: 0,\r\n                    titleSpacing: 0\r\n                },\r\n                plugins: {\r\n                    legend: {\r\n                        display: false\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var ctx = element.getContext('2d');\r\n        var myDoughnut = new Chart(ctx, config);\r\n    }\r\n\r\n    var initGraph = function () {\r\n        var element = document.getElementById(\"kt_project_overview_graph\");\r\n        var height = parseInt(KTUtil.css(element, 'height'));\r\n\r\n        if (!element) {\r\n            return;\r\n        }\r\n\r\n        var options = {\r\n            series: [{\r\n                name: 'Incomplete',\r\n                data: [70, 70, 80, 80, 75, 75, 75]\r\n            }, {\r\n                name: 'Complete',\r\n                data: [55, 55, 60, 60, 55, 55, 60]\r\n            }],\r\n            chart: {\r\n                type: 'area',\r\n                height: height,\r\n                toolbar: {\r\n                    show: false\r\n                }\r\n            },\r\n            plotOptions: {\r\n\r\n            },\r\n            legend: {\r\n                show: false\r\n            },\r\n            dataLabels: {\r\n                enabled: false\r\n            },\r\n            fill: {\r\n                type: 'solid',\r\n                opacity: 1\r\n            },\r\n            stroke: {\r\n                curve: 'smooth',\r\n                show: true,\r\n                width: 3,\r\n                colors: [primary, success]\r\n            },\r\n            xaxis: {\r\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\r\n                axisBorder: {\r\n                    show: false,\r\n                },\r\n                axisTicks: {\r\n                    show: false\r\n                },\r\n                labels: {\r\n                    style: {\r\n                        colors: gray500,\r\n                        fontSize: '12px'\r\n                    }\r\n                },\r\n                crosshairs: {\r\n                    position: 'front',\r\n                    stroke: {\r\n                        color: primary,\r\n                        width: 1,\r\n                        dashArray: 3\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    formatter: undefined,\r\n                    offsetY: 0,\r\n                    style: {\r\n                        fontSize: '12px'\r\n                    }\r\n                }\r\n            },\r\n            yaxis: {\r\n                labels: {\r\n                    style: {\r\n                        colors: gray500,\r\n                        fontSize: '12px',\r\n                    }\r\n                }\r\n            },\r\n            states: {\r\n                normal: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                hover: {\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                },\r\n                active: {\r\n                    allowMultipleDataPointsSelection: false,\r\n                    filter: {\r\n                        type: 'none',\r\n                        value: 0\r\n                    }\r\n                }\r\n            },\r\n            tooltip: {\r\n                style: {\r\n                    fontSize: '12px',\r\n                },\r\n                y: {\r\n                    formatter: function (val) {\r\n                        return val + \" tasks\"\r\n                    }\r\n                }\r\n            },\r\n            colors: [lightPrimary, lightSuccess],\r\n            grid: {\r\n                borderColor: gray200,\r\n                strokeDashArray: 4,\r\n                yaxis: {\r\n                    lines: {\r\n                        show: true\r\n                    }\r\n                }\r\n            },\r\n            markers: {\r\n                //size: 5,\r\n                colors: [lightPrimary, lightSuccess],\r\n                strokeColor: [primary, success],\r\n                strokeWidth: 3\r\n            }\r\n        };\r\n\r\n        var chart = new ApexCharts(element, options);\r\n        chart.render();\r\n    }\r\n\r\n    var initTable = function () {\r\n        var table = document.querySelector('#kt_profile_overview_table');\r\n\r\n        if (!table) {\r\n            return;\r\n        }\r\n\r\n        // Set date data order\r\n        const tableRows = table.querySelectorAll('tbody tr');\r\n\r\n        tableRows.forEach(row => {\r\n            const dateRow = row.querySelectorAll('td');\r\n            const realDate = moment(dateRow[1].innerHTML, \"MMM D, YYYY\").format();\r\n            dateRow[1].setAttribute('data-order', realDate);\r\n        });\r\n\r\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\r\n        const datatable = $(table).DataTable({\r\n            \"info\": false,\r\n            'order': []\r\n        });\r\n\r\n        // Filter dropdown elements\r\n        const filterOrders = document.getElementById('kt_filter_orders');\r\n        const filterYear = document.getElementById('kt_filter_year');\r\n\r\n        // Filter by order status --- official docs reference: https://datatables.net/reference/api/search()\r\n        filterOrders.addEventListener('change', function (e) {\r\n            datatable.column(3).search(e.target.value).draw();\r\n        });\r\n\r\n        // Filter by date --- official docs reference: https://momentjs.com/docs/\r\n        var minDate;\r\n        var maxDate;\r\n\r\n        filterYear.addEventListener('change', function (e) {\r\n            const value = e.target.value;\r\n            switch (value) {\r\n                case 'thisyear': {\r\n                    minDate = moment().startOf('year').format();\r\n                    maxDate = moment().endOf('year').format();\r\n                    datatable.draw();\r\n                    break;\r\n                }\r\n                case 'thismonth': {\r\n                    minDate = moment().startOf('month').format();\r\n                    maxDate = moment().endOf('month').format();\r\n                    datatable.draw();\r\n                    break;\r\n                }\r\n                case 'lastmonth': {\r\n                    minDate = moment().subtract(1, 'months').startOf('month').format();\r\n                    maxDate = moment().subtract(1, 'months').endOf('month').format();\r\n                    datatable.draw();\r\n                    break;\r\n                }\r\n                case 'last90days': {\r\n                    minDate = moment().subtract(30, 'days').format();\r\n                    maxDate = moment().format();\r\n                    datatable.draw();\r\n                    break;\r\n                }\r\n                default: {\r\n                    minDate = moment().subtract(100, 'years').startOf('month').format();\r\n                    maxDate = moment().add(1, 'months').endOf('month').format();\r\n                    datatable.draw();\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        // Date range filter --- offical docs reference: https://datatables.net/examples/plug-ins/range_filtering.html\r\n        $.fn.dataTable.ext.search.push(\r\n            function (settings, data, dataIndex) {\r\n                var min = minDate;\r\n                var max = maxDate;\r\n                var date = parseFloat(moment(data[1]).format()) || 0; // use data for the age column\r\n\r\n                if ((isNaN(min) && isNaN(max)) ||\r\n                    (isNaN(min) && date <= max) ||\r\n                    (min <= date && isNaN(max)) ||\r\n                    (min <= date && date <= max)) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n        );\r\n\r\n        // Search --- official docs reference: https://datatables.net/reference/api/search()\r\n        var filterSearch = document.getElementById('kt_filter_search');\r\n        filterSearch.addEventListener('keyup', function (e) {\r\n            datatable.search(e.target.value).draw();\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initChart();\r\n            initGraph();\r\n            initTable();\r\n        }\r\n    }\r\n}();\r\n\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTProjectOverview.init();\r\n});"],"sourceRoot":""}