{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/documentation/forms/clipboard.js"],"names":["KTFormsClipboard","init","target","document","getElementById","button","nextElementSibling","ClipboardJS","text","value","on","e","currentLabel","innerHTML","setTimeout","example1","innerText","example2","example3","checkIcon","querySelector","svgIcon","createElement","classList","add","appendChild","classes","remove","removeChild","example4","KTUtil","onDOMContentLoaded"],"mappings":"mBAGA,IAAIA,EA0JO,CAEHC,KAAM,YAvJK,WAEX,MAAMC,EAASC,SAASC,eAAe,kBACjCC,EAASH,EAAOI,mBAGV,IAAIC,YAAYF,EAAQ,CAChCH,OAAQA,EACRM,KAAM,WACF,OAAON,EAAOO,SAKZC,GAAG,WAAW,SAAUC,GAC9B,MAAMC,EAAeP,EAAOQ,UAGH,YAArBR,EAAOQ,YAKXR,EAAOQ,UAAY,UAGnBC,YAAW,WACPT,EAAOQ,UAAYD,IACpB,SA4HHG,GAxHO,WAEX,MAAMb,EAASC,SAASC,eAAe,kBACjCC,EAASH,EAAOI,mBAGV,IAAIC,YAAYF,EAAQ,CAChCH,OAAQA,EACRM,KAAM,WACF,OAAON,EAAOc,aAKZN,GAAG,WAAW,SAAUC,GAC9B,MAAMC,EAAeP,EAAOQ,UAGH,YAArBR,EAAOQ,YAKXR,EAAOQ,UAAY,UAGnBC,YAAW,WACPT,EAAOQ,UAAYD,IACpB,SA6FHK,GAzFO,WAEX,MAAMf,EAASC,SAASC,eAAe,kBAG3B,IAAIG,YAAYL,GAGlBQ,GAAG,WAAW,SAAUC,GAC9B,MAAMC,EAAeV,EAAOW,UAGH,YAArBX,EAAOW,YAKXX,EAAOW,UAAY,UAGnBC,YAAW,WACPZ,EAAOW,UAAYD,IACpB,SAoEHM,GAhEO,WAEX,MAAMhB,EAASC,SAASC,eAAe,kBACjCC,EAASH,EAAOI,mBAGV,IAAIC,YAAYF,EAAQ,CAChCH,OAAQA,EACRM,KAAM,WACF,OAAON,EAAOW,aAKZH,GAAG,WAAW,SAAUC,GAC9B,IAAIQ,EAAYd,EAAOe,cAAc,gBACjCC,EAAUhB,EAAOe,cAAc,aAGnC,GAAID,EACA,QAIJA,EAAYhB,SAASmB,cAAc,MACzBC,UAAUC,IAAI,MACxBL,EAAUI,UAAUC,IAAI,YACxBL,EAAUI,UAAUC,IAAI,SAGxBnB,EAAOoB,YAAYN,GAGnB,MAAMO,EAAU,CAAC,eAAgB,cACjCxB,EAAOqB,UAAUC,OAAOE,GAGxBrB,EAAOkB,UAAUC,IAAI,eAGrBH,EAAQE,UAAUC,IAAI,UAGtBV,YAAW,WAEPO,EAAQE,UAAUI,OAAO,UAGzBtB,EAAOuB,YAAYT,GAGnBjB,EAAOqB,UAAUI,UAAUD,GAG3BrB,EAAOkB,UAAUI,OAAO,iBACzB,QAUHE,KAMZC,OAAOC,oBAAmB,WACtB/B,EAAiBC,W","file":"js/custom/documentation/forms/clipboard.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTFormsClipboard = function () {\r\n    // Shared variables\r\n    var clipboard;\r\n\r\n    // Private functions\r\n    var example1 = function () {\r\n        // Select elements\r\n        const target = document.getElementById('kt_clipboard_1');\r\n        const button = target.nextElementSibling;\r\n\r\n        // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\r\n        clipboard = new ClipboardJS(button, {\r\n            target: target,\r\n            text: function () {\r\n                return target.value;\r\n            }\r\n        });\r\n\r\n        // Success action handler\r\n        clipboard.on('success', function (e) {\r\n            const currentLabel = button.innerHTML;\r\n\r\n            // Exit label update when already in progress\r\n            if (button.innerHTML === 'Copied!') {\r\n                return;\r\n            }\r\n\r\n            // Update button label\r\n            button.innerHTML = \"Copied!\";\r\n\r\n            // Revert button label after 3 seconds\r\n            setTimeout(function () {\r\n                button.innerHTML = currentLabel;\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    var example2 = function () {\r\n        // Select elements\r\n        const target = document.getElementById('kt_clipboard_2');\r\n        const button = target.nextElementSibling;\r\n\r\n        // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\r\n        clipboard = new ClipboardJS(button, {\r\n            target: target,\r\n            text: function () {\r\n                return target.innerText;\r\n            }\r\n        });\r\n\r\n        // Success action handler\r\n        clipboard.on('success', function (e) {\r\n            const currentLabel = button.innerHTML;\r\n\r\n            // Exit label update when already in progress\r\n            if (button.innerHTML === 'Copied!') {\r\n                return;\r\n            }\r\n\r\n            // Update button label\r\n            button.innerHTML = \"Copied!\";\r\n\r\n            // Revert button label after 3 seconds\r\n            setTimeout(function () {\r\n                button.innerHTML = currentLabel;\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    var example3 = function () {\r\n        // Select element\r\n        const target = document.getElementById('kt_clipboard_3');\r\n\r\n        // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\r\n        clipboard = new ClipboardJS(target);\r\n\r\n        // Success action handler\r\n        clipboard.on('success', function (e) {\r\n            const currentLabel = target.innerHTML;\r\n\r\n            // Exit label update when already in progress\r\n            if (target.innerHTML === 'Copied!') {\r\n                return;\r\n            }\r\n\r\n            // Update button label\r\n            target.innerHTML = \"Copied!\";\r\n\r\n            // Revert button label after 3 seconds\r\n            setTimeout(function () {\r\n                target.innerHTML = currentLabel;\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    var example4 = function () {\r\n        // Select elements\r\n        const target = document.getElementById('kt_clipboard_4');\r\n        const button = target.nextElementSibling;\r\n\r\n        // Init clipboard -- for more info, please read the offical documentation: https://clipboardjs.com/\r\n        clipboard = new ClipboardJS(button, {\r\n            target: target,\r\n            text: function () {\r\n                return target.innerHTML;\r\n            }\r\n        });\r\n\r\n        // Success action handler\r\n        clipboard.on('success', function (e) {\r\n            var checkIcon = button.querySelector('.bi.bi-check');\r\n            var svgIcon = button.querySelector('.svg-icon');\r\n\r\n            // Exit check icon when already showing\r\n            if (checkIcon) {\r\n                return;\r\n            }\r\n\r\n            // Create check icon\r\n            checkIcon = document.createElement('i');\r\n            checkIcon.classList.add('bi');\r\n            checkIcon.classList.add('bi-check');\r\n            checkIcon.classList.add('fs-2x');\r\n\r\n            // Append check icon\r\n            button.appendChild(checkIcon);\r\n\r\n            // Highlight target\r\n            const classes = ['text-success', 'fw-boldest'];\r\n            target.classList.add(...classes);\r\n\r\n            // Highlight button\r\n            button.classList.add('btn-success');\r\n\r\n            // Hide copy icon\r\n            svgIcon.classList.add('d-none');\r\n\r\n            // Revert button label after 3 seconds\r\n            setTimeout(function () {\r\n                // Remove check icon\r\n                svgIcon.classList.remove('d-none');\r\n\r\n                // Revert icon\r\n                button.removeChild(checkIcon);\r\n\r\n                // Remove target highlight\r\n                target.classList.remove(...classes);\r\n\r\n                // Remove button highlight\r\n                button.classList.remove('btn-success');\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    return {\r\n        // Public Functions\r\n        init: function () {\r\n            example1();\r\n            example2();\r\n            example3();\r\n            example4();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTFormsClipboard.init();\r\n});\r\n"],"sourceRoot":""}