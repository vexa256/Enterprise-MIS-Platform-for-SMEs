{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/apps/customers/view/payment-method.js"],"names":["KTCustomerViewPaymentMethod","init","document","getElementById","querySelectorAll","forEach","row","querySelector","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","remove","modal","hide","dismiss","KTUtil","onDOMContentLoaded"],"mappings":"mBAGA,IAAIA,EA+FO,CACHC,KAAM,WA3FQC,SAASC,eAAe,mCACdC,iBAAiB,4CAE/BC,SAAQC,IAEOA,EAAIC,cAAc,8CAG1BC,iBAAiB,SAASC,IACnCA,EAAEC,iBAGFC,KAAKC,KAAK,CACNC,KAAM,mDACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,kBACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,OACPlB,EAAImB,SACJC,MAAMC,QACoB,WAAnBJ,EAAOK,SACdjB,KAAKC,KAAK,CACNC,KAAM,8BACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,8BAYxBlB,SAASK,cAAc,oDAE/BC,iBAAiB,SAASC,IAC7BA,EAAEC,iBAGFC,KAAKC,KAAK,CACNC,KAAM,2DACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,eACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,kBACfC,aAAc,0BAEnBC,MAAK,SAAUC,GACVA,EAAOC,MACPb,KAAKC,KAAK,CACNC,KAAM,iCACNC,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,qBAGG,WAAnBG,EAAOK,SACdjB,KAAKC,KAAK,CACNC,KAAM,qCACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,6BAkB3CS,OAAOC,oBAAmB,WACtB9B,EAA4BC,W","file":"js/custom/apps/customers/view/payment-method.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTCustomerViewPaymentMethod = function () {\r\n\r\n    // Private functions\r\n    var initPaymentMethod = function () {\r\n        // Define variables\r\n        const table = document.getElementById('kt_customer_view_payment_method');\r\n        const tableRows = table.querySelectorAll('[ data-kt-customer-payment-method=\"row\"]');\r\n\r\n        tableRows.forEach(row => {\r\n            // Select delete button\r\n            const deleteButton = row.querySelector('[data-kt-customer-payment-method=\"delete\"]');\r\n\r\n            // Delete button action\r\n            deleteButton.addEventListener('click', e => {\r\n                e.preventDefault();\r\n\r\n                // Popup confirmation\r\n                Swal.fire({\r\n                    text: \"Are you sure you would like to delete this card?\",\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    buttonsStyling: false,\r\n                    confirmButtonText: \"Yes, delete it!\",\r\n                    cancelButtonText: \"No, return\",\r\n                    customClass: {\r\n                        confirmButton: \"btn btn-primary\",\r\n                        cancelButton: \"btn btn-active-light\"\r\n                    }\r\n                }).then(function (result) {\r\n                    if (result.value) {\r\n                        row.remove();\r\n                        modal.hide(); // Hide modal\t\t\t\t\r\n                    } else if (result.dismiss === 'cancel') {\r\n                        Swal.fire({\r\n                            text: \"Your card was not deleted!.\",\r\n                            icon: \"error\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\",\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    // Handle set as primary button\r\n    const handlePrimaryButton = () => {\r\n        // Define variable\r\n        const button = document.querySelector('[data-kt-payment-mehtod-action=\"set_as_primary\"]');\r\n\r\n        button.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            // Popup confirmation\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to set this card as primary?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, set it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    Swal.fire({\r\n                        text: \"Your card was set to primary!.\",\r\n                        icon: \"success\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your card was not set to primary!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initPaymentMethod();\r\n            handlePrimaryButton();\r\n        }\r\n    }\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTCustomerViewPaymentMethod.init();\r\n});"],"sourceRoot":""}