{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/apps/customers/add.js"],"names":["submitButton","cancelButton","closeButton","validator","form","modal","KTModalCustomersAdd","init","bootstrap","Modal","document","querySelector","FormValidation","formValidation","fields","validators","notEmpty","message","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","$","on","revalidateField","addEventListener","e","preventDefault","validate","then","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","hide","window","location","getAttribute","showCancelButton","cancelButtonText","value","reset","dismiss","KTUtil","onDOMContentLoaded"],"mappings":"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","file":"js/custom/apps/customers/add.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTModalCustomersAdd = function () {\r\n    var submitButton;\r\n    var cancelButton;\r\n\tvar closeButton;\r\n    var validator;\r\n    var form;\r\n    var modal;\r\n\r\n    // Init form inputs\r\n    var handleForm = function () {\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\tvalidator = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n                    'name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Customer name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    'email': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Customer email is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'first-name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'First name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'last-name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Last name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'country': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Country is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'address1': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Address 1 is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'city': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'City is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'state': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'State is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'postcode': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Postcode is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Revalidate country field. For more info, plase visit the official plugin site: https://select2.org/\r\n        $(form.querySelector('[name=\"country\"]')).on('change', function() {\r\n            // Revalidate the field when an option is chosen\r\n            validator.revalidateField('country');\r\n        });\r\n\r\n\t\t// Action buttons\r\n\t\tsubmitButton.addEventListener('click', function (e) {\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// Validate form before submit\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\t\tconsole.log('validated!');\r\n\r\n\t\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n\t\t\t\t\t\t// Disable submit button whilst loading\r\n\t\t\t\t\t\tsubmitButton.disabled = true;\r\n\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\r\n\t\t\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function (result) {\r\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\r\n\t\t\t\t\t\t\t\t\t// Hide modal\r\n\t\t\t\t\t\t\t\t\tmodal.hide();\r\n\r\n\t\t\t\t\t\t\t\t\t// Enable submit button after loading\r\n\t\t\t\t\t\t\t\t\tsubmitButton.disabled = false;\r\n\r\n\t\t\t\t\t\t\t\t\t// Redirect to customers list page\r\n\t\t\t\t\t\t\t\t\twindow.location = form.getAttribute(\"data-kt-redirect\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n\r\n        cancelButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n\t\tcloseButton.addEventListener('click', function(e){\r\n\t\t\te.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\t\t})\r\n    }\r\n\r\n    return {\r\n        // Public functions\r\n        init: function () {\r\n            // Elements\r\n            modal = new bootstrap.Modal(document.querySelector('#kt_modal_add_customer'));\r\n\r\n            form = document.querySelector('#kt_modal_add_customer_form');\r\n            submitButton = form.querySelector('#kt_modal_add_customer_submit');\r\n            cancelButton = form.querySelector('#kt_modal_add_customer_cancel');\r\n\t\t\tcloseButton = form.querySelector('#kt_modal_add_customer_close');\r\n\r\n            handleForm();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n\tKTModalCustomersAdd.init();\r\n});"],"sourceRoot":""}