{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/apps/subscriptions/add/advanced.js"],"names":["table","datatable","initCustomFieldRowIndex","KTSubscriptionsAdvanced","querySelectorAll","forEach","tr","index","fieldNameInput","querySelector","fieldValueInput","fieldNameLabel","getAttribute","fieldValueLabel","setAttribute","init","document","getElementById","addButton","fieldName","innerHTML","fieldValue","deleteButton","rowNode","$","DataTable","addEventListener","e","preventDefault","row","add","draw","node","find","eq","addClass","initCustomFieldsDatatable","KTUtil","on","parent","target","closest","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","remove","dismiss","onDOMContentLoaded"],"mappings":"mBAEA,IAEQA,EACAC,EA0CAC,EA7CJC,GA6CID,EAA0B,WACRF,EAAMI,iBAAiB,YAE/BC,SAAQ,CAACC,EAAIC,KAEnB,MAAMC,EAAiBF,EAAGG,cAAc,wBAClCC,EAAkBJ,EAAGG,cAAc,yBACnCE,EAAiBH,EAAeI,aAAa,MAC7CC,EAAkBH,EAAgBE,aAAa,MAErDJ,EAAeM,aAAa,OAAQH,EAAiB,IAAMJ,GAC3DG,EAAgBI,aAAa,OAAQD,EAAkB,IAAMN,OAqD9D,CACHQ,KAAM,WACFf,EAAQgB,SAASC,eAAe,+BA1GR,WAE5B,MAAMC,EAAYF,SAASC,eAAe,mCAGpCE,EAAYnB,EAAMS,cAAc,2BAA2BW,UAC3DC,EAAarB,EAAMS,cAAc,4BAA4BW,UAC7DE,EAAetB,EAAMS,cAAc,0BAA0BW,UAYnE,IAAIG,EATJtB,EAAYuB,EAAExB,GAAOyB,UAAU,CAC3B,MAAQ,EACR,MAAS,GACT,UAAY,EACZ,QAAU,EACV,cAAgB,IAOpBP,EAAUQ,iBAAiB,SAAS,SAAUC,GAC1CA,EAAEC,iBAEFL,EAAUtB,EAAU4B,IAAIC,IAAI,CACxBX,EACAE,EACAC,IACDS,OAAOC,OAGVR,EAAED,GAASU,KAAK,MAAMC,GAAG,GAAGC,SAAS,YAGrCjC,OAyEAkC,GACAlC,IApDJmC,OAAOC,GAAGtC,EAAO,kCAAmC,SAAS,SAAS2B,GAClEA,EAAEC,iBAGF,MAAMW,EAASZ,EAAEa,OAAOC,QAAQ,MAGhCC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,kBAAkB,EAClBC,gBAAgB,EAChBC,kBAAmB,eACnBC,iBAAkB,aAClBC,YAAa,CACTC,cAAe,yBACfC,aAAc,0CAEnBC,MAAK,SAAUC,GACVA,EAAOC,MACPb,KAAKC,KAAK,CACNC,KAAM,wBACNC,KAAM,UACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,6BAEpBE,MAAK,WAEJpD,EAAU4B,IAAIL,EAAEe,IAASiB,SAASzB,UAEZ,WAAnBuB,EAAOG,SACdf,KAAKC,KAAK,CACNC,KAAM,sBACNC,KAAM,QACNE,gBAAgB,EAChBC,kBAAmB,cACnBE,YAAa,CACTC,cAAe,sCAoB3Cd,OAAOqB,oBAAmB,WACtBvD,EAAwBY,W","file":"js/custom/apps/subscriptions/add/advanced.js","sourcesContent":["\"use strict\";\r\n\r\nvar KTSubscriptionsAdvanced = function () {\r\n    // Shared variables\r\n    var table;\r\n    var datatable;\r\n\r\n    var initCustomFieldsDatatable = function () {\r\n        // Define variables\r\n        const addButton = document.getElementById('kt_create_new_custom_fields_add');\r\n\r\n        // Duplicate input fields\r\n        const fieldName = table.querySelector('tbody tr td:first-child').innerHTML;\r\n        const fieldValue = table.querySelector('tbody tr td:nth-child(2)').innerHTML;\r\n        const deleteButton = table.querySelector('tbody tr td:last-child').innerHTML;\r\n\r\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\r\n        datatable = $(table).DataTable({\r\n            \"info\": false,\r\n            'order': [],\r\n            'ordering': false,\r\n            'paging': false,\r\n            \"lengthChange\": false\r\n        });\r\n\r\n        // Define datatable row node\r\n        var rowNode;\r\n\r\n        // Handle add button\r\n        addButton.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n\r\n            rowNode = datatable.row.add([\r\n                fieldName,\r\n                fieldValue,\r\n                deleteButton\r\n            ]).draw().node();\r\n\r\n            // Add custom class to last column -- more info: https://datatables.net/forums/discussion/22341/row-add-cell-class\r\n            $(rowNode).find('td').eq(2).addClass('text-end');\r\n\r\n            // Re-calculate index\r\n            initCustomFieldRowIndex();\r\n        });\r\n    }\r\n\r\n    // Handle row index count\r\n    var initCustomFieldRowIndex = function() {\r\n        const tableRows = table.querySelectorAll('tbody tr');\r\n\r\n        tableRows.forEach((tr, index) => {\r\n            // add index number to input names & id\r\n            const fieldNameInput = tr.querySelector('td:first-child input');\r\n            const fieldValueInput = tr.querySelector('td:nth-child(2) input');\r\n            const fieldNameLabel = fieldNameInput.getAttribute('id');\r\n            const fieldValueLabel = fieldValueInput.getAttribute('id');\r\n\r\n            fieldNameInput.setAttribute('name', fieldNameLabel + '-' + index);\r\n            fieldValueInput.setAttribute('name', fieldValueLabel + '-' + index);\r\n        });\r\n    }\r\n\r\n    // Delete product\r\n    var deleteCustomField = function() {\r\n        KTUtil.on(table, '[data-kt-action=\"field_remove\"]', 'click', function(e) {\r\n            e.preventDefault();\r\n\r\n            // Select parent row\r\n            const parent = e.target.closest('tr');\r\n\r\n            // SweetAlert2 pop up --- official docs reference: https://sweetalert2.github.io/\r\n            Swal.fire({\r\n                text: \"Are you sure you want to delete this field ?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, delete!\",\r\n                cancelButtonText: \"No, cancel\",\r\n                customClass: {\r\n                    confirmButton: \"btn fw-bold btn-danger\",\r\n                    cancelButton: \"btn fw-bold btn-active-light-primary\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    Swal.fire({\r\n                        text: \"You have deleted it!.\",\r\n                        icon: \"success\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn fw-bold btn-primary\",\r\n                        }\r\n                    }).then(function () {\r\n                        // Remove current row\r\n                        datatable.row($(parent)).remove().draw();\r\n                    });\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"It was not deleted.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn fw-bold btn-primary\",\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    return {\r\n        init: function () {\r\n            table = document.getElementById('kt_create_new_custom_fields');\r\n\r\n            initCustomFieldsDatatable();\r\n            initCustomFieldRowIndex();            \r\n            deleteCustomField();\r\n        }\r\n    }\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTSubscriptionsAdvanced.init();\r\n});"],"sourceRoot":""}