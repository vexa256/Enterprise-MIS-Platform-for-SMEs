{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/apps/user-management/users/view/add-schedule.js"],"names":["KTUsersAddSchedule","element","document","getElementById","form","querySelector","modal","bootstrap","Modal","init","$","flatpickr","enableTime","dateFormat","tagifyInput","Tagify","whitelist","maxTags","dropdown","maxItems","classname","enabled","closeOnSelect","validator","FormValidation","formValidation","fields","validators","notEmpty","message","plugins","trigger","Trigger","Bootstrap5","rowSelector","eleInvalidClass","eleValidClass","on","revalidateField","addEventListener","e","preventDefault","Swal","fire","text","icon","showCancelButton","buttonsStyling","confirmButtonText","cancelButtonText","customClass","confirmButton","cancelButton","then","result","value","reset","hide","dismiss","submitButton","validate","status","console","log","setAttribute","disabled","setTimeout","removeAttribute","isConfirmed","initAddSchedule","KTUtil","onDOMContentLoaded"],"mappings":"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","file":"js/custom/apps/user-management/users/view/add-schedule.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTUsersAddSchedule = function () {\r\n    // Shared variables\r\n    const element = document.getElementById('kt_modal_add_schedule');\r\n    const form = element.querySelector('#kt_modal_add_schedule_form');\r\n    const modal = new bootstrap.Modal(element);\r\n\r\n    // Init add schedule modal\r\n    var initAddSchedule = () => {       \r\n\r\n        // Init flatpickr -- for more info: https://flatpickr.js.org/\r\n        $(\"#kt_modal_add_schedule_datepicker\").flatpickr({\r\n            enableTime: true,\r\n            dateFormat: \"Y-m-d H:i\",\r\n        });\r\n\r\n        // Init tagify -- for more info: https://yaireo.github.io/tagify/\r\n        const tagifyInput = form.querySelector('#kt_modal_add_schedule_tagify');\r\n        new Tagify(tagifyInput, {\r\n            whitelist: [\"sean@dellito.com\", \"brian@exchange.com\", \"mikaela@pexcom.com\", \"f.mitcham@kpmg.com.au\", \"olivia@corpmail.com\", \"owen.neil@gmail.com\", \"dam@consilting.com\", \"emma@intenso.com\", \"ana.cf@limtel.com\", \"robert@benko.com\", \"lucy.m@fentech.com\", \"ethan@loop.com.au\"],\r\n            maxTags: 10,\r\n            dropdown: {\r\n                maxItems: 20,           // <- mixumum allowed rendered suggestions\r\n                classname: \"tagify__inline__suggestions\", // <- custom classname for this dropdown, so it could be targeted\r\n                enabled: 0,             // <- show suggestions on focus\r\n                closeOnSelect: false    // <- do not hide the suggestions dropdown once an item has been selected\r\n            }\r\n        });\r\n\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n\t\tvar validator = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\r\n\t\t\t\t\t'event_datetime': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Event date & time is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    'event_name': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Event name is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    'event_org': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Event organiser is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    'event_invitees': {\r\n\t\t\t\t\t\tvalidators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Event invitees is required'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\t\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n\t\t\t\t\t\trowSelector: '.fv-row',\r\n                        eleInvalidClass: '',\r\n                        eleValidClass: ''\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\r\n        // Revalidate country field. For more info, plase visit the official plugin site: https://select2.org/\r\n        $(form.querySelector('[name=\"event_invitees\"]')).on('change', function () {\r\n            // Revalidate the field when an option is chosen\r\n            validator.revalidateField('event_invitees');\r\n        });\r\n\r\n        // Close button handler\r\n        const closeButton = element.querySelector('[data-kt-users-modal-action=\"close\"]');\r\n        closeButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        // Cancel button handler\r\n        const cancelButton = element.querySelector('[data-kt-users-modal-action=\"cancel\"]');\r\n        cancelButton.addEventListener('click', e => {\r\n            e.preventDefault();\r\n\r\n            Swal.fire({\r\n                text: \"Are you sure you would like to cancel?\",\r\n                icon: \"warning\",\r\n                showCancelButton: true,\r\n                buttonsStyling: false,\r\n                confirmButtonText: \"Yes, cancel it!\",\r\n                cancelButtonText: \"No, return\",\r\n                customClass: {\r\n                    confirmButton: \"btn btn-primary\",\r\n                    cancelButton: \"btn btn-active-light\"\r\n                }\r\n            }).then(function (result) {\r\n                if (result.value) {\r\n                    form.reset(); // Reset form\t\r\n                    modal.hide(); // Hide modal\t\t\t\t\r\n                } else if (result.dismiss === 'cancel') {\r\n                    Swal.fire({\r\n                        text: \"Your form has not been cancelled!.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\",\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n\r\n        // Submit button handler\r\n        const submitButton = element.querySelector('[data-kt-users-modal-action=\"submit\"]');\r\n\t\tsubmitButton.addEventListener('click', function (e) {\r\n\t\t\t// Prevent default button action\r\n\t\t\te.preventDefault();\r\n\r\n\t\t\t// Validate form before submit\r\n\t\t\tif (validator) {\r\n\t\t\t\tvalidator.validate().then(function (status) {\r\n\t\t\t\t\tconsole.log('validated!');\r\n\r\n\t\t\t\t\tif (status == 'Valid') {\r\n\t\t\t\t\t\t// Show loading indication\r\n\t\t\t\t\t\tsubmitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n\t\t\t\t\t\t// Disable button to avoid multiple click \r\n\t\t\t\t\t\tsubmitButton.disabled = true;\r\n\r\n\t\t\t\t\t\t// Simulate form submission. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n\t\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\t\t// Remove loading indication\r\n\t\t\t\t\t\t\tsubmitButton.removeAttribute('data-kt-indicator');\r\n\r\n\t\t\t\t\t\t\t// Enable button\r\n\t\t\t\t\t\t\tsubmitButton.disabled = false;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// Show popup confirmation \r\n\t\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\t\ttext: \"Form has been successfully submitted!\",\r\n\t\t\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function (result) {\r\n\t\t\t\t\t\t\t\tif (result.isConfirmed) {\r\n\t\t\t\t\t\t\t\t\tmodal.hide();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//form.submit(); // Submit form\r\n\t\t\t\t\t\t}, 2000);   \t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Show popup warning. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n\t\t\t\t\t\tSwal.fire({\r\n\t\t\t\t\t\t\ttext: \"Sorry, looks like there are some errors detected, please try again.\",\r\n\t\t\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\t\t\tbuttonsStyling: false,\r\n\t\t\t\t\t\t\tconfirmButtonText: \"Ok, got it!\",\r\n\t\t\t\t\t\t\tcustomClass: {\r\n\t\t\t\t\t\t\t\tconfirmButton: \"btn btn-primary\"\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t});\r\n    }\r\n\r\n    return {\r\n        // Public functions\r\n        init: function () {\r\n            initAddSchedule();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function () {\r\n    KTUsersAddSchedule.init();\r\n});"],"sourceRoot":""}