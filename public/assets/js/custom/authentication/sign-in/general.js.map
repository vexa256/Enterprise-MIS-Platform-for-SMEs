{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/authentication/sign-in/general.js"],"names":["form","submitButton","validator","KTSigninGeneral","init","document","querySelector","FormValidation","formValidation","fields","validators","notEmpty","message","emailAddress","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","addEventListener","e","preventDefault","validate","then","status","setAttribute","disabled","setTimeout","removeAttribute","Swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","result","isConfirmed","value","KTUtil","onDOMContentLoaded"],"mappings":"mBAGA,IAEQA,EACAC,EACAC,EAJJC,EAiGO,CAEHC,KAAM,WACFJ,EAAOK,SAASC,cAAc,oBAC9BL,EAAeI,SAASC,cAAc,sBA5F1CJ,EAAYK,eAAeC,eAChCR,EACA,CACCS,OAAQ,CACP,MAAS,CACUC,WAAY,CAC7BC,SAAU,CACTC,QAAS,6BAEWC,aAAc,CAClCD,QAAS,4CAIG,SAAY,CACRF,WAAY,CACRC,SAAU,CACNC,QAAS,+BAKrCE,QAAS,CACRC,QAAS,IAAIR,eAAeO,QAAQE,QACpCC,UAAW,IAAIV,eAAeO,QAAQI,WAAW,CAC9BC,YAAa,eAO7BlB,EAAamB,iBAAiB,SAAS,SAAUC,GAE7CA,EAAEC,iBAGFpB,EAAUqB,WAAWC,MAAK,SAAUC,GAClB,SAAVA,GAEAxB,EAAayB,aAAa,oBAAqB,MAG/CzB,EAAa0B,UAAW,EAIxBC,YAAW,WAEP3B,EAAa4B,gBAAgB,qBAG7B5B,EAAa0B,UAAW,EAGxBG,KAAKC,KAAK,CACNC,KAAM,mCACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,qBAEpBb,MAAK,SAAUc,GACVA,EAAOC,cACPvC,EAAKM,cAAc,kBAAkBkC,MAAO,GAC5CxC,EAAKM,cAAc,qBAAqBkC,MAAO,SAIxD,MAGHV,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,6BAqB3CI,OAAOC,oBAAmB,WACtBvC,EAAgBC,W","file":"js/custom/authentication/sign-in/general.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTSigninGeneral = function() {\r\n    // Elements\r\n    var form;\r\n    var submitButton;\r\n    var validator;\r\n\r\n    // Handle form\r\n    var handleForm = function(e) {\r\n        // Init form validation rules. For more info check the FormValidation plugin's official documentation:https://formvalidation.io/\r\n        validator = FormValidation.formValidation(\r\n\t\t\tform,\r\n\t\t\t{\r\n\t\t\t\tfields: {\t\t\t\t\t\r\n\t\t\t\t\t'email': {\r\n                        validators: {\r\n\t\t\t\t\t\t\tnotEmpty: {\r\n\t\t\t\t\t\t\t\tmessage: 'Email address is required'\r\n\t\t\t\t\t\t\t},\r\n                            emailAddress: {\r\n\t\t\t\t\t\t\t\tmessage: 'The value is not a valid email address'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n                    'password': {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'The password is required'\r\n                            }\r\n                        }\r\n                    } \r\n\t\t\t\t},\r\n\t\t\t\tplugins: {\r\n\t\t\t\t\ttrigger: new FormValidation.plugins.Trigger(),\r\n\t\t\t\t\tbootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row'\r\n                    })\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\t\t\r\n\r\n        // Handle form submit\r\n        submitButton.addEventListener('click', function (e) {\r\n            // Prevent button default action\r\n            e.preventDefault();\r\n\r\n            // Validate form\r\n            validator.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    // Show loading indication\r\n                    submitButton.setAttribute('data-kt-indicator', 'on');\r\n\r\n                    // Disable button to avoid multiple click \r\n                    submitButton.disabled = true;\r\n                    \r\n\r\n                    // Simulate ajax request\r\n                    setTimeout(function() {\r\n                        // Hide loading indication\r\n                        submitButton.removeAttribute('data-kt-indicator');\r\n\r\n                        // Enable button\r\n                        submitButton.disabled = false;\r\n\r\n                        // Show message popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                        Swal.fire({\r\n                            text: \"You have successfully logged in!\",\r\n                            icon: \"success\",\r\n                            buttonsStyling: false,\r\n                            confirmButtonText: \"Ok, got it!\",\r\n                            customClass: {\r\n                                confirmButton: \"btn btn-primary\"\r\n                            }\r\n                        }).then(function (result) {\r\n                            if (result.isConfirmed) { \r\n                                form.querySelector('[name=\"email\"]').value= \"\";\r\n                                form.querySelector('[name=\"password\"]').value= \"\";                                \r\n                                //form.submit(); // submit form\r\n                            }\r\n                        });\r\n                    }, 2000);   \t\t\t\t\t\t\r\n                } else {\r\n                    // Show error popup. For more info check the plugin's official documentation: https://sweetalert2.github.io/\r\n                    Swal.fire({\r\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn btn-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\t\t});\r\n    }\r\n\r\n    // Public functions\r\n    return {\r\n        // Initialization\r\n        init: function() {\r\n            form = document.querySelector('#kt_sign_in_form');\r\n            submitButton = document.querySelector('#kt_sign_in_submit');\r\n            \r\n            handleForm();\r\n        }\r\n    };\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTSigninGeneral.init();\r\n});\r\n"],"sourceRoot":""}