{"version":3,"sources":["webpack://metronic/../demo5/src/js/custom/account/settings/signin-methods.js"],"names":["KTAccountSettingsSigninMethods","init","validation","signInForm","signInMainEl","document","getElementById","signInEditEl","passwordMainEl","passwordEditEl","signInChangeEmail","signInCancelEmail","passwordChange","passwordCancel","querySelector","addEventListener","toggleChangeEmail","toggleChangePassword","classList","toggle","initSettings","FormValidation","formValidation","fields","emailaddress","validators","notEmpty","message","emailAddress","confirmemailpassword","plugins","trigger","Trigger","bootstrap","Bootstrap5","rowSelector","e","preventDefault","console","log","validate","then","status","swal","fire","text","icon","buttonsStyling","confirmButtonText","customClass","confirmButton","passwordForm","currentpassword","newpassword","confirmpassword","identical","compare","value","handleChangePassword","KTUtil","onDOMContentLoaded"],"mappings":"mBAGA,IAAIA,EAoMO,CACHC,KAAM,WAvJc,IAChBC,EAGAC,GAhDW,WAGf,IAAIC,EAAeC,SAASC,eAAe,mBACvCC,EAAeF,SAASC,eAAe,wBACvCE,EAAiBH,SAASC,eAAe,sBACzCG,EAAiBJ,SAASC,eAAe,2BAGzCI,EAAoBL,SAASC,eAAe,0BAC5CK,EAAoBN,SAASC,eAAe,oBAC5CM,EAAiBP,SAASC,eAAe,6BACzCO,EAAiBR,SAASC,eAAe,sBAG7CI,EAAkBI,cAAc,UAAUC,iBAAiB,SAAS,WAChEC,OAGJL,EAAkBI,iBAAiB,SAAS,WACxCC,OAGJJ,EAAeE,cAAc,UAAUC,iBAAiB,SAAS,WAC7DE,OAGJJ,EAAeE,iBAAiB,SAAS,WACrCE,OAGJ,IAAID,EAAoB,WACpBZ,EAAac,UAAUC,OAAO,UAC9BT,EAAkBQ,UAAUC,OAAO,UACnCZ,EAAaW,UAAUC,OAAO,WAG9BF,EAAuB,WACvBT,EAAeU,UAAUC,OAAO,UAChCP,EAAeM,UAAUC,OAAO,UAChCV,EAAeS,UAAUC,OAAO,WA4JhCC,GApJAjB,EAAaE,SAASC,eAAe,0BAEzCJ,EAAamB,eAAeC,eACxBnB,EACA,CACIoB,OAAQ,CACJC,aAAc,CACVC,WAAY,CACRC,SAAU,CACNC,QAAS,qBAEbC,aAAc,CACVD,QAAS,4CAKrBE,qBAAsB,CAClBJ,WAAY,CACRC,SAAU,CACNC,QAAS,2BAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCC,UAAW,IAAIZ,eAAeS,QAAQI,WAAW,CAC7CC,YAAa,eAM7BhC,EAAWW,cAAc,qBAAqBC,iBAAiB,SAAS,SAAUqB,GAC9EA,EAAEC,iBACFC,QAAQC,IAAI,SAEZrC,EAAWsC,WAAWC,MAAK,SAAUC,GACnB,SAAVA,EACAC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,4CAIvBP,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,kDAQZ,SAAUd,GACjC,IAAIlC,EAGAiD,EAAe9C,SAASC,eAAe,6BAE3CJ,EAAamB,eAAeC,eACxB6B,EACA,CACI5B,OAAQ,CACJ6B,gBAAiB,CACb3B,WAAY,CACRC,SAAU,CACNC,QAAS,kCAKrB0B,YAAa,CACT5B,WAAY,CACRC,SAAU,CACNC,QAAS,8BAKrB2B,gBAAiB,CACb7B,WAAY,CACRC,SAAU,CACNC,QAAS,gCAEb4B,UAAW,CACPC,QAAS,WACL,OAAOL,EAAarC,cAAc,wBAAwB2C,OAE9D9B,QAAS,oDAMzBG,QAAS,CACLC,QAAS,IAAIV,eAAeS,QAAQE,QACpCC,UAAW,IAAIZ,eAAeS,QAAQI,WAAW,CAC7CC,YAAa,eAM7BgB,EAAarC,cAAc,uBAAuBC,iBAAiB,SAAS,SAAUqB,GAClFA,EAAEC,iBACFC,QAAQC,IAAI,SAEZrC,EAAWsC,WAAWC,MAAK,SAAUC,GACnB,SAAVA,EACAC,KAAKC,KAAK,CACNC,KAAM,+CACNC,KAAM,UACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,4CAIvBP,KAAKC,KAAK,CACNC,KAAM,sEACNC,KAAM,QACNC,gBAAgB,EAChBC,kBAAmB,cACnBC,YAAa,CACTC,cAAe,kDAa/BQ,KAMZC,OAAOC,oBAAmB,WACtB5D,EAA+BC,W","file":"js/custom/account/settings/signin-methods.js","sourcesContent":["\"use strict\";\r\n\r\n// Class definition\r\nvar KTAccountSettingsSigninMethods = function () {\r\n    // Private functions\r\n    var initSettings = function () {\r\n\r\n        // UI elements\r\n        var signInMainEl = document.getElementById('kt_signin_email');\r\n        var signInEditEl = document.getElementById('kt_signin_email_edit');\r\n        var passwordMainEl = document.getElementById('kt_signin_password');\r\n        var passwordEditEl = document.getElementById('kt_signin_password_edit');\r\n\r\n        // button elements\r\n        var signInChangeEmail = document.getElementById('kt_signin_email_button');\r\n        var signInCancelEmail = document.getElementById('kt_signin_cancel');\r\n        var passwordChange = document.getElementById('kt_signin_password_button');\r\n        var passwordCancel = document.getElementById('kt_password_cancel');\r\n\r\n        // toggle UI\r\n        signInChangeEmail.querySelector('button').addEventListener('click', function () {\r\n            toggleChangeEmail();\r\n        });\r\n\r\n        signInCancelEmail.addEventListener('click', function () {\r\n            toggleChangeEmail();\r\n        });\r\n\r\n        passwordChange.querySelector('button').addEventListener('click', function () {\r\n            toggleChangePassword();\r\n        });\r\n\r\n        passwordCancel.addEventListener('click', function () {\r\n            toggleChangePassword();\r\n        });\r\n\r\n        var toggleChangeEmail = function () {\r\n            signInMainEl.classList.toggle('d-none');\r\n            signInChangeEmail.classList.toggle('d-none');\r\n            signInEditEl.classList.toggle('d-none');\r\n        }\r\n\r\n        var toggleChangePassword = function () {\r\n            passwordMainEl.classList.toggle('d-none');\r\n            passwordChange.classList.toggle('d-none');\r\n            passwordEditEl.classList.toggle('d-none');\r\n        }\r\n    }\r\n\r\n    var handleChangeEmail = function (e) {\r\n        var validation;\r\n\r\n        // form elements\r\n        var signInForm = document.getElementById('kt_signin_change_email');\r\n\r\n        validation = FormValidation.formValidation(\r\n            signInForm,\r\n            {\r\n                fields: {\r\n                    emailaddress: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Email is required'\r\n                            },\r\n                            emailAddress: {\r\n                                message: 'The value is not a valid email address'\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    confirmemailpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Password is required'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n\r\n                plugins: { //Learn more: https://formvalidation.io/guide/plugins\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row'\r\n                    })\r\n                }\r\n            }\r\n        );\r\n\r\n        signInForm.querySelector('#kt_signin_submit').addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            console.log('click');\r\n\r\n            validation.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    swal.fire({\r\n                        text: \"Sent password reset. Please check your email\",\r\n                        icon: \"success\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                } else {\r\n                    swal.fire({\r\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    var handleChangePassword = function (e) {\r\n        var validation;\r\n\r\n        // form elements\r\n        var passwordForm = document.getElementById('kt_signin_change_password');\r\n\r\n        validation = FormValidation.formValidation(\r\n            passwordForm,\r\n            {\r\n                fields: {\r\n                    currentpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Current Password is required'\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    newpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'New Password is required'\r\n                            }\r\n                        }\r\n                    },\r\n\r\n                    confirmpassword: {\r\n                        validators: {\r\n                            notEmpty: {\r\n                                message: 'Confirm Password is required'\r\n                            },\r\n                            identical: {\r\n                                compare: function() {\r\n                                    return passwordForm.querySelector('[name=\"newpassword\"]').value;\r\n                                },\r\n                                message: 'The password and its confirm are not the same'\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n\r\n                plugins: { //Learn more: https://formvalidation.io/guide/plugins\r\n                    trigger: new FormValidation.plugins.Trigger(),\r\n                    bootstrap: new FormValidation.plugins.Bootstrap5({\r\n                        rowSelector: '.fv-row'\r\n                    })\r\n                }\r\n            }\r\n        );\r\n\r\n        passwordForm.querySelector('#kt_password_submit').addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n            console.log('click');\r\n\r\n            validation.validate().then(function (status) {\r\n                if (status == 'Valid') {\r\n                    swal.fire({\r\n                        text: \"Sent password reset. Please check your email\",\r\n                        icon: \"success\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                } else {\r\n                    swal.fire({\r\n                        text: \"Sorry, looks like there are some errors detected, please try again.\",\r\n                        icon: \"error\",\r\n                        buttonsStyling: false,\r\n                        confirmButtonText: \"Ok, got it!\",\r\n                        customClass: {\r\n                            confirmButton: \"btn font-weight-bold btn-light-primary\"\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    // Public methods\r\n    return {\r\n        init: function () {\r\n            initSettings();\r\n            handleChangeEmail();\r\n            handleChangePassword();\r\n        }\r\n    }\r\n}();\r\n\r\n// On document ready\r\nKTUtil.onDOMContentLoaded(function() {\r\n    KTAccountSettingsSigninMethods.init();\r\n});\r\n"],"sourceRoot":""}